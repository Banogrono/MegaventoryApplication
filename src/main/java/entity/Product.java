
package entity;


import lombok.Data;
import org.json.JSONObject;

@Data
public class Product implements JSONableEntity {

    // ========================================================================================
    // Fields
    // ========================================================================================

    private int SKU;
    private String description;
    private double salesPrice;
    private double purchasePrice;

    // ========================================================================================
    // Constructors
    // ========================================================================================

    public Product(int SKU, String description, double salesPrice, double purchasePrice) {
        this.SKU = SKU;
        this.description = description;
        this.salesPrice = salesPrice;
        this.purchasePrice = purchasePrice;
    }

    public Product() {
    }


    // ========================================================================================
    // Getters & Setters
    // ========================================================================================

    // generated by lombok

    // ========================================================================================
    // Methods
    // ========================================================================================

    public JSONObject toJSON(String mvRecordAction) {
        JSONObject mvProduct = createJSONObjectFromThis();

        JSONObject container = new JSONObject();
        container.put("mvRecordAction", mvRecordAction);
        container.put("mvProduct", mvProduct);

        return container;
    }

    private JSONObject createJSONObjectFromThis() {
        JSONObject mvProduct = new JSONObject();

        mvProduct.put("ProductSKU", this.getSKU());
        mvProduct.put("ProductDescription", this.getDescription());
        mvProduct.put("ProductSellingPrice", String.valueOf(this.getSalesPrice()));
        mvProduct.put("ProductPurchasePrice", String.valueOf(this.getPurchasePrice()));
        return mvProduct;
    }

}
